from aiogram.types import InlineKeyboardMarkup as IKM, InlineKeyboardButton as IKB
from src.mailing.data.notification.notification_google_sheets_worker import notification_gsworker


def to_start_kb() -> IKM:
    back_to_start_button = IKB(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é ‚Ü©', callback_data='start')

    markup = IKM(inline_keyboard=[
        [back_to_start_button]
    ])
    return markup


def get_markup(user_id: int, has_token: bool) -> IKM:
    inline_kb = []
    if not has_token:
        btn = [IKB(text='–ú–µ–Ω—é –æ—Ç—á—ë—Ç–æ–≤', callback_data='server_report_authorization')]
    else:
        btn = [IKB(text='–ú–µ–Ω—é –æ—Ç—á—ë—Ç–æ–≤', callback_data='analytics_report_begin')]
    inline_kb.append(btn)

    btn = [IKB(text='–ú–µ–Ω—é —Ç–µ—Ö-–ø–æ–¥–¥–µ—Ä–∂–∫–∏ üõ†', callback_data='techsupport_menu')]
    inline_kb.append(btn)

    if notification_gsworker.contains_id(user_id):
        btn = [IKB(text='–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π ‚ùå', callback_data='unregister')]
    else:
        btn = [IKB(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π üì©', callback_data='register')]
    inline_kb.append(btn)

    btn = [IKB(text='–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç üìä', callback_data='generate_report')]
    inline_kb.append(btn)

    btn = [IKB(text='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω—ã–π –æ—Ç—á—ë—Ç üìë', callback_data='generate_sample_report')]
    inline_kb.append(btn)

    btn = [IKB(text='–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç –ø–æ JSON üìä', callback_data='generate_json_report')]
    inline_kb.append(btn)

    btn = [IKB(text='–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ‚ùì', callback_data='send_question')]
    inline_kb.append(btn)

    return IKM(inline_keyboard=inline_kb)


def get_report_format_keyboard():
    keyboard = IKM(row_width=2)
    keyboard.add(
        IKB("PDF", callback_data="generate_json_report_pdf"),
        IKB("Excel", callback_data="generate_json_report_excel")
    )
    return keyboard

