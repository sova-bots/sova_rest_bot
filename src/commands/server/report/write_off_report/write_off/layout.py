from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import InlineKeyboardMarkup as IKM, InlineKeyboardButton as IKB

from ...report_util import ReportRequestData, get_report_parameters_from_state, get_department_name, get_reports, get_reports_from_data, report_periods

router = Router(name=__name__)


@router.callback_query(F.data == "losses_write_off_menu")
async def losses_write_off_menu(query: CallbackQuery, state: FSMContext):
    await write_off_layout_msg(query, state)
    await query.answer()


async def write_off_layout_msg(query: CallbackQuery, state: FSMContext):
    assert isinstance(query.message, Message)

    period = (await state.get_data())['report_period']
    department_name = await get_department_name((await state.get_data())['report_department'], query.from_user.id)

    kb = IKM(inline_keyboard=[
                [IKB(text="–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ üìä ", callback_data="write_off_show_parameters")],
                [IKB(text="–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ üëÄ", callback_data="write_off_only_negative")],
                [IKB(text="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ üí°", callback_data="write_off_recomendations")]
            ])

    await state.set_state(None)
    await query.message.edit_text(f"–û–±—ä–µ–∫—Ç: <b>{department_name}</b>\n–û—Ç—á—ë—Ç: <b>–ü–æ—Ç–µ—Ä–∏ —Å–ø–∏—Å–∞–Ω–∏—è</b>\n–ü–µ—Ä–∏–æ–¥: <b>{report_periods[period]}</b>", reply_markup=kb)



@router.callback_query(F.data == "write_off_show_parameters")
async def losses_write_off_show_parameters_handler(query: CallbackQuery, state: FSMContext):
    assert isinstance(query.message, Message)

    period = (await state.get_data())['report_period']
    department_name = await get_department_name((await state.get_data())['report_department'], query.from_user.id)

    await query.message.edit_text("–ó–∞–≥—Ä—É–∑–∫–∞... ‚åõ")

    request_data = ReportRequestData(
        user_id=query.from_user.id,
        state_data=(await state.get_data()),
    )

    data = await get_reports_from_data(query, request_data)

    header = f"–û–±—ä–µ–∫—Ç: <b>{department_name}</b>\n–û—Ç—á—ë—Ç: <b>–ü–æ—Ç–µ—Ä–∏ —Å–ø–∏—Å–∞–Ω–∏—è</b>\n–ü–µ—Ä–∏–æ–¥: <b>{report_periods[period]}"

    for report in data["data"]:
        text = f"""
<b>–í–∏—Ç—Ä–∏–Ω–∞</b>:
<b>–°–ª—É–∂–µ–±–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ</b>:
<b>–ë—Ä–∞–∫–µ—Ä–∞–∂</b>:
<b>–§—Ä–∏—Ç—é—Ä</b>:

<b>–•–æ–∑—ã</b>:
"""

        await query.message.edit_text(f"{report=}")

    await query.answer()



@router.callback_query(F.data == "write_off_recomendations")
async def losses_write_off_recomendations_handler(query: CallbackQuery, state: FSMContext):
    assert isinstance(query.message, Message)

    text = """
<b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</b>:

1. –î–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ—Ç–µ—Ä—å –ø—Ä–æ–≤–æ–¥–∏—Ç–µ —Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π –æ—Å–Ω–æ–≤–µ, –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –∏–ª–∏ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∏–¥–∞ —Å–ø–∏—Å–∞–Ω–∏—è.

2. –ù–∞–∑–Ω–∞—á—å—Ç–µ –æ—Ç–≤—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å–ø–∏—Å–∞–Ω–∏–π –∏ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∏—Ö –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å.

3. –†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É –º–æ—Ç–∏–≤–∞—Ü–∏–∏/KPI –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –Ω–∞ –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏—é —Å–ø–∏—Å–∞–Ω–∏–π.

4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –ª–∏–º–∏—Ç—ã –ø–æ —Ä–∞–∑–Ω—ã–º –≤–∏–¥–∞–º —Å–ø–∏—Å–∞–Ω–∏–π/—Å–∫–ª–∞–¥–æ–≤.

5. –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ –∑–∞—è–≤–∫–∏ —Ç–æ–≤–∞—Ä–∞, —Å–ª–µ–¥–∏—Ç–µ, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø–µ—Ä–µ—Ç–∞—Ä–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö.

6. –ü—Ä–æ–≤–æ–¥–∏—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–æ–±—Ä–∞–Ω–∏—è —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏, —Å –ø–æ–º–æ—â—å—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã SOVA-rest, —Å–æ–≤–º–µ—Å—Ç–Ω–æ —Å–º–æ—Ç—Ä–∏—Ç–µ, –æ–±—Å—É–∂–¥–∞–π—Ç–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏, –≤–æ–≤—Ä–µ–º—è –≤—ã—è–≤–ª—è–π—Ç–µ –ø–µ—Ä–µ–∫–æ—Å—ã, –Ω–µ–≥–∞—Ç–∏–≤–Ω—É—é –¥–∏–Ω–∞–º–∏–∫—É, –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ —É—Å—Ç—Ä–∞–Ω—è–π—Ç–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è.
"""
    await query.message.answer(text)
    await query.answer()
